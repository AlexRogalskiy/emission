version: 2.0

jobs:
  build-and-test:
    # Specify the Xcode version to use
    macos:
      xcode: "10.3.0"

    shell: /bin/bash --login -eo pipefail

    environment:
      # WARNING: These env vars are passed to PRs on forks.
      # WARNING: DO NOT PUT SENSITIVE INFORMATION HERE.
      ArtsyAPIClientSecret: "-"
      ArtsyAPIClientKey: "-"
      StripePublishableKey: "-"
      MapBoxAPIClientKey: "-"

      # For caching gems, relative to current directory
      BUNDLE_PATH: vendor/bundle
      BUNDLER_VERSION: 2.0.2

    steps:
      - run:
          name: List Simulators
          command: xcrun simctl list

      - checkout

      - restore_cache:
          keys:
            - v3-gems-{{ checksum "Example/Gemfile.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v3-gems-

      - run:
          name: Bundle install
          command: cd Example ; yarn ci:skip-native-if-possible || bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3

      - save_cache:
          key: v3-gems-{{ checksum "Example/Gemfile.lock" }}
          paths:
            - Example/vendor/bundle

      - restore_cache:
          keys:
            - v3-yarn-{{ checksum "yarn.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v3-yarn-

      - run:
          name: Install Yarn Dependencies
          command: yarn ci:skip-native-if-possible || yarn install --ignore-engines

      - save_cache:
          key: v3-yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - restore_cache:
          keys:
            - v9-pods-{{ checksum "package.json" }}

      - run:
          name: Install CocoaPods Specs If Necessary
          command: yarn ci:skip-native-if-possible || { cd Example ; bundle exec pod check --ignore-dev-pods || { curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf ; } ; }

      - run:
          name: Install CocoaPods If Necessary
          command: yarn ci:skip-native-if-possible || { cd Example ; bundle exec pod check --ignore-dev-pods || bundle exec pod install ; }

      - save_cache:
          key: v9-pods-{{ checksum "package.json" }}
          paths:
            - Example/Pods

      - run:
          name: Package JavaScript for Testing
          command: "yarn ci:skip-native-if-possible || yarn bundle-for-native-ci"

      - run:
          name: Set up build artefact directories
          command: mkdir -p /tmp/test_results/xcode

      - run:
          name: Run Unit Tests
          command: yarn ci:skip-native-if-possible || { cd Example ; set -o pipefail && xcodebuild -workspace Emission.xcworkspace -scheme "Emission Example" -configuration Debug test -sdk iphonesimulator -destination "platform=iOS Simulator,OS=12.4,name=iPhone X" GCC_PREPROCESSOR_DEFINITIONS="\$GCC_PREPROCESSOR_DEFINITIONS RUNNING_ON_CI=1" | tee /tmp/xcode_test_raw.log | xcpretty -c --test --report junit --output /tmp/test_results/xcode/results.xml ; }

      - store_test_results:
          path: /tmp/test_results/

      - store_artifacts:
          path: /tmp/xcode_test_raw.log
          prefix: tests

  deploy:
    macos:
      xcode: "10.3.0"

    shell: /bin/bash --login -eo pipefail

    environment:
      # WARNING: These env vars are passed to PRs on forks.
      # WARNING: DO NOT PUT SENSITIVE INFORMATION HERE.
      ArtsyAPIClientSecret: "-"
      ArtsyAPIClientKey: "-"
      StripePublishableKey: "-"
      MapBoxAPIClientKey: "-"

      # For caching gems, relative to current directory
      BUNDLE_PATH: vendor/bundle
      BUNDLER_VERSION: 2.0.2

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "23:11:82:24:bb:cb:a8:1e:7a:eb:b1:f3:d6:e1:55:32"

      - restore_cache:
          keys:
            - v3-gems-{{ checksum "Example/Gemfile.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v3-gems-

      - run:
          name: Bundle install
          command: cd Example ; yarn ci:skip-native-if-possible || bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3

      - save_cache:
          key: v3-gems-{{ checksum "Example/Gemfile.lock" }}
          paths:
            - Example/vendor/bundle

      - restore_cache:
          keys:
            - v3-yarn-{{ checksum "yarn.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v3-yarn-

      - run:
          name: Install Yarn Dependencies
          command: yarn install --ignore-engines

      - save_cache:
          key: v3-yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - restore_cache:
          keys:
            - v9-pods-{{ checksum "package.json" }}

      - run:
          name: Deploy via auto-release
          command: yarn release

      - save_cache:
          key: v9-pods-{{ checksum "package.json" }}
          paths:
            - Example/Pods

workflows:
  version: 2
  build-test:
    jobs:
      - build-and-test
      - deploy:
          filters:
            branches:
              only:
                - master
